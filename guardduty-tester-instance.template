{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template will create a linux instance with some red team scripts & tools that operate against common applications that are created in the same private subnet. **WARNING** This template creates Amazon EC2 instance and related resources. You will be billed for the AWS resources used if you create a stack from this template.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Security Group Configuration"
                    },
                    "Parameters": [
                        "RedTeamSecurityGroup"
                    ]
                },
                {
                    "Label": {
                        "default": "RedTeam Instance Configuration"
                    },
                    "Parameters": [
                        "KeyPairName",
                        "PrivateSubnet"
                    ]
                },
                {
                    "Label": {
                        "default": "Linux Target Instance Configuration"
                    },
                    "Parameters": [
                        "BasicLinuxTargetIP"
                    ]
                }
            ],
            "ParameterLabels": {
                "KeyPairName": {
                    "default": "Key Pair Name"
                },
                "PrivateSubnet": {
                    "default": "Subnet"
                },
                "RedTeamSecurityGroup": {
                    "default": "Security Groups"
                },
                "BasicLinuxTargetIP": {
                    "default": "Target IP"
                }   
            }
        }
    },
    "Parameters": {
        "KeyPairName": {
            "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "PrivateSubnet": {
            "Description": "Subnet ID to deploy the RedTeam instance",
            "Type": "AWS::EC2::Subnet::Id"
        }, 
        "RedTeamSecurityGroup": {
            "Description": "Security Groups that should connectivity to instance and from instance to target",
            "Type": "List<AWS::EC2::SecurityGroup::Id>"
        }, 
        "BasicLinuxTargetIP": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.2.38",
            "Description": "IP address of Linux instance to target",
            "Type": "String"
        },
        "LatestLinuxAMI": {
            "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
            "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
        }      
    },
    "Conditions": {
        "GovCloudCondition": {
            "Fn::Equals": [
                {
                    "Ref": "AWS::Region"
                },
                "us-gov-west-1"
            ]
        },
       "NATInstanceCondition": {
            "Fn::Equals": [
                {
                    "Ref": "AWS::Region"
                },
                "us-gov-west-1"
            ]
        },
        "NATGatewayCondition": {
            "Fn::Not": [
                {
                    "Condition": "GovCloudCondition"
                }
            ]
        },
	"NVirginiaRegionCondition": {
            "Fn::Equals": [
                {
                    "Ref": "AWS::Region"
                },
                "us-east-1"
            ]
        }
    },
    "Resources": {
	    "RedTeamIAMRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
               "AssumeRolePolicyDocument": {
                   "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Effect": "Allow"
                        }
                    ],
                    "Version": "2012-10-17"
               },
                "Path": "/",
                "Policies": [
		    ]
		
	      }
	    },
        "RedTeamInstanceProfile": {
                "Type": "AWS::IAM::InstanceProfile",
                "Properties": {
                    "Roles": [
                        {
                            "Ref": "RedTeamIAMRole"
                        }
                    ],
                    "Path": "/"
                }
        },
            "RedTeam" : {
                "Type" : "AWS::EC2::Instance",
                "Properties" : {
                    "KeyName" : {
			"Ref" : "KeyPairName"
		    },
            "NetworkInterfaces": [ {
                "AssociatePublicIpAddress": "true",
                "DeviceIndex": "0",
                "GroupSet": { "Ref" : "RedTeamSecurityGroup" },
                "SubnetId": { "Ref" : "PrivateSubnet" }
            } ],
                    "IamInstanceProfile" : {"Ref" : "RedTeamInstanceProfile"},
                    "UserData" : {
                         "Fn::Base64" : {
                             "Fn::Join" : [ "",
					    [
  	                                     	"#!/bin/bash\n",
      	       	                             	"export PATH=$PATH:/usr/local/bin:/usr/sbin:/root/.local/bin\n",
						"echo 'export PATH=/root/.local/bin:/usr/sbin:$PATH' >> /home/ec2-user/.profile\n",
                                                "yum update -y\n",
						"yum install nmap git python python2-pip python3 python-argparse gcc gcc-c++ glib2-devel -y\n",
						"yum install cmake openssl-devel libX11-devel libXi-devel libXtst-devel libXinerama-devel libusb-static libusbmuxd-devel libusbx-devel libusb-devel -y\n",
                        "pip install paramiko\n",
                        "pip3 install paramiko\n",
						"export privateIP=`curl http://169.254.169.254/latest/meta-data/local-ipv4`\n",
						"curl -L https://raw.githubusercontent.com/jamboubou/amazon-guardduty-lab/master/guardduty_tester.sh > /home/ec2-user/guardduty_tester.sh\n",
						"mkdir /home/ec2-user/compromised_keys\n",
                                                "mkdir /home/ec2-user/domains\n",
						"mkdir /home/ec2-user/passwords\n",
                                                "curl -L https://raw.githubusercontent.com/awslabs/amazon-guardduty-tester/master/artifacts/queries.txt > /home/ec2-user/domains/queries.txt\n",
                                                "curl -L https://raw.githubusercontent.com/awslabs/amazon-guardduty-tester/master/artifacts/password_list.txt > /home/ec2-user/passwords/password_list.txt\n",
						"curl -L https://raw.githubusercontent.com/awslabs/amazon-guardduty-tester/master/artifacts/never_used_sample_key.foo > /home/ec2-user/compromised_keys/compromised.pem\n",
		                                "FILE=\"/home/ec2-user/compromised_keys/compromised.pem\"\n",
 						"for FILE in {1..20}; do cp /home/ec2-user/compromised_keys/compromised.pem /home/ec2-user/compromised_keys/compromised$FILE.pem; done\n",
						"echo 'BASIC_LINUX_TARGET=\"",
						{ "Ref" : "BasicLinuxTargetIP"},
						"\"' >> /home/ec2-user/localIps.sh\n",
						"echo 'BASIC_WINDOWS_TARGET=\"",
						{ "Ref" : "BasicLinuxTargetIP"},
						"\"' >> /home/ec2-user/localIps.sh\n",
                                                "echo -n 'RED_TEAM_INSTANCE=\"' >> /home/ec2-user/localIps.sh\n",
						"wget -q -O - http://169.254.169.254/latest/meta-data/instance-id >> /home/ec2-user/localIps.sh\n",
						"echo '\"' >> /home/ec2-user/localIps.sh\n",
                                                "echo -n 'RED_TEAM_IP=\"' >> /home/ec2-user/localIps.sh\n",
						"wget -q -O - http://169.254.169.254/latest/meta-data/local-ipv4 >> /home/ec2-user/localIps.sh\n",
						"echo '\"' >> /home/ec2-user/localIps.sh\n",
						"echo 'BASIC_LINUX_INSTANCE=\"",
						{ "Ref" : "BasicLinuxTargetIP"},
						"\"' >> /home/ec2-user/localIps.sh\n",
						"echo 'BASIC_WINDOWS_INSTANCE=\"",
						{ "Ref" : "BasicLinuxTargetIP"},
                        "\"' >> /home/ec2-user/localIps.sh\n",
                                                "pip install cmake\n",
                                                "mkdir /home/ec2-user/FreeRDP\n",
                                                "mkdir /home/ec2-user/thc-hydra\n",
                                                "git clone https://github.com/vanhauser-thc/thc-hydra /home/ec2-user/thc-hydra\n",
                                                "wget -q -O /home/ec2-user/libssh.tar.xz https://www.libssh.org/files/0.9/libssh-0.9.4.tar.xz\n",
                                                "cd /home/ec2-user/\n",
                                                "cat << EOF >> users\n",
                                                "ec2-user\nroot\nadmin\nadministrator\nftp\nwww\nnobody\nEOF\n",
                                                "tar -xvf /home/ec2-user/libssh.tar.xz\n",
                                                "cd /home/ec2-user/libssh-0.9.4\n",
                                                "mkdir build\n",
                                                "cd build\n",
                                                "cmake -DUNIT_TESTING=OFF -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release ..\n",
                                                "make && make install\n",
						"cd /home/ec2-user\n",
						"git clone -b \"stable-2.0\" git://github.com/FreeRDP/FreeRDP.git /home/ec2-user/FreeRDP\n",
						"cd /home/ec2-user/FreeRDP\n",
						"cmake -DCMAKE_BUILD_TYPE=Debug -DWITH_SSE2=ON .\n",
                                                "make install\n",
						"echo '/usr/local/lib/freerdp' >> /etc/ld.so.conf.d/freerdp.conf\n",
						"ln -s /usr/local/bin/xfreerdp /usr/bin/xfreerdp\n",
                        "cd /home/ec2-user\n",
                        "echo \"export LD_LIBRARY_PATH=/usr/lib:/usr/local/lib64:$LD_LIBRARY_PATH\" >> .bash_profile\n",
                        "cd /home/ec2-user/thc-hydra\n",
						"/home/ec2-user/thc-hydra/configure\n",
						"make\n",
						"make install\n",
						"git clone https://github.com/galkan/crowbar /home/ec2-user/crowbar\n",
						"chown -R ec2-user: /home/ec2-user\n",
						"chmod +x /home/ec2-user/guardduty_tester.sh\n",
						"chmod +x /home/ec2-user/crowbar/crowbar.py\n"
					    ]
                              ]
                          }
                      },
                    "InstanceType" : "m5.large",
                    "ImageId": 
                    {
                        "Ref": "LatestLinuxAMI"
                    },
                    "Tags" : [ {
                          "Key" : "Name",
                          "Value" : "RedTeam"
                       },
                       {
                           "Key" : "CreatedBy",
                           "Value" : "GuardDuty Test Script"
                       } ]
                    }                 
            }
    },
    "Outputs": {
        "RedTeamIp": {
            "Description": "Local IP for RedTeam Instance",
            "Value": {
	        "Fn::GetAtt" : [ "RedTeam", "PrivateIp" ] 
            }
        }
    }
}
